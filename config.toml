[grammars]

# [grammars.tree-sitter-name]
# path     = "./grammars/tree-sitter-name"
# cpp      = true
# relative = "subpath"

[grammars.tree-sitter-bash]
path    = "./grammars/tree-sitter-bash"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-c]
path = "./grammars/tree-sitter-c"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-c-sharp]
path = "./grammars/tree-sitter-c-sharp"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-clojure]
path = "./grammars/tree-sitter-clojure"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-cmake]
path = "./grammars/tree-sitter-cmake"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-cpp]
path = "./grammars/tree-sitter-cpp"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-css]
path = "./grammars/tree-sitter-css"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-d]
path = "./grammars/tree-sitter-d"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-dockerfile]
path = "./grammars/tree-sitter-dockerfile"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-elixir]
path = "./grammars/tree-sitter-elixir"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-elm]
path = "./grammars/tree-sitter-elm"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-erlang]
path = "./grammars/tree-sitter-erlang"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-glimmer]
path = "./grammars/tree-sitter-glimmer"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-glsl]
path = "./grammars/tree-sitter-glsl"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-go]
path = "./grammars/tree-sitter-go"
generate = true
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-hare]
path = "./grammars/tree-sitter-hare"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-haskell]
path = "./grammars/tree-sitter-haskell"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-haxe]
path = "./grammars/tree-sitter-haxe"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-hcl]
path = "./grammars/tree-sitter-hcl"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-html]
path = "./grammars/tree-sitter-html"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-java]
path = "./grammars/tree-sitter-java"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-javascript]
path = "./grammars/tree-sitter-javascript"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-json]
path = "./grammars/tree-sitter-json"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-julia]
path = "./grammars/tree-sitter-julia"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-kotlin]
path = "./grammars/tree-sitter-kotlin"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-latex]
path = "./grammars/tree-sitter-latex"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-lua]
path = "./grammars/tree-sitter-lua"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-markdown]
path     = "./grammars/tree-sitter-markdown"
relative = "tree-sitter-markdown"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-markdown-inline]
path     = "./grammars/tree-sitter-markdown"
relative = "tree-sitter-markdown-inline"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-nix]
path = "./grammars/tree-sitter-nix"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-ocaml]
path     = "./grammars/tree-sitter-ocaml"
relative = "ocaml"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-ocaml-interface]
path     = "./grammars/tree-sitter-ocaml"
relative = "interface"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-php]
path = "./grammars/tree-sitter-php"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-prisma]
path = "./grammars/tree-sitter-prisma"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-protobuf]
path = "./grammars/tree-sitter-protobuf"
generate = true
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-python]
path = "./grammars/tree-sitter-python"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-ql]
path = "./grammars/tree-sitter-ql"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-r]
path = "./grammars/tree-sitter-r"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-ruby]
path = "./grammars/tree-sitter-ruby"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-rust]
path = "./grammars/tree-sitter-rust"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-scheme]
path = "./grammars/tree-sitter-scheme"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-scss]
path = "./grammars/tree-sitter-scss"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-sql]
path = "./grammars/tree-sitter-sql"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-svelte]
path = "./grammars/tree-sitter-svelte"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-swift]
generate = true
path     = "./grammars/tree-sitter-swift"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-toml]
path = "./grammars/tree-sitter-toml"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-typescript]
path     = "./grammars/tree-sitter-typescript"
relative = "typescript"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-typescript-react]
path     = "./grammars/tree-sitter-typescript"
relative = "tsx"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-vue]
path = "./grammars/tree-sitter-vue"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-wgsl]
path = "./grammars/tree-sitter-wgsl"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-xml]
path = "./grammars/tree-sitter-xml"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }

[grammars.tree-sitter-yaml]
path = "./grammars/tree-sitter-yaml"
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.cc", cpp = true, flags = [] }

[grammars.tree-sitter-zig]
path = "./grammars/tree-sitter-zig"
generate = true
parser  = { path = "parser.c", cpp = false, flags = [] }
scanner = { path = "scanner.c", cpp = false, flags = [] }
